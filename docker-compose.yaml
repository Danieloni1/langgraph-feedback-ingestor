version: '3.7'
networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  temporal_ui_data:

services:
  temporal:
    image: temporalio/auto-setup:latest
    ports:
      - "7233:7233"
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgres
      - POSTGRES_PASSWORD=temporal
      - POSTGRES_DB=temporal
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy

  temporal-ui:
    image: temporalio/ui:latest
    ports:
      - "8080:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_UI_PORT=8080
      - TEMPORAL_UI_CSRF_COOKIE_INSECURE=true
      - TEMPORAL_UI_DEBUG_MODE=true
    networks:
      - app_network
    depends_on:
      - temporal

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
      - POSTGRES_DB=temporal
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U temporal -d temporal"]
      interval: 5s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: src/Dockerfile.worker
    networks:
      - app_network
    depends_on:
      - temporal

  app:
    build:
      context: .
      dockerfile: src/Dockerfile.app
    ports:
      - "5001:5001"
    networks:
      - app_network
    depends_on:
      - temporal